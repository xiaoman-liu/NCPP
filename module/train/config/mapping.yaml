model_dict:
    "LinearModel": model.lr.linear_regression.LinearModel
    "XgboostModel": model.xgb.xgboost.XgboostModel
    "FCN-Model": model.fcn.fcn.FCN
    "FCN-Vector": model.fcn_vec.fcn_vector.FCN_Vec
    "ResNet": model.resnet.resnet.ResNet
    "AttenResNet": model.atten_resnet.atten_resnet.AttenResNet
    "MultiAttenResNet": model.res_trans_net.multi_atten_resnet.MultiAttenResNet
    "RandomForest": model.random_forest.rf.RandomForest
    "SVMModel": model.svm.svm.SVMModel
    GroupMultiAttenResNet: model.group_multi_atten_resnet.group_attention_resnet.GroupMultiAttenResNet
    LSTMModel: model.lstm.lstm.LSTMModel
    Lasso: model.lasso.lasso.Lasso
    Ridge: model.ridge.ridge.Ridge
    ElasticNet: model.elastic_net.elastic_net.ElasticNet
    
    

replace_dict:
    'Add Bandwidth (NTW) (MB/s)': 'Add Bandwidth (MB/s)'
    'Copy Bandwidth (NTW) (MB/s)': 'Copy Bandwidth (MB/s)'
    'Scale Bandwidth (NTW) (MB/s)': 'Scale Bandwidth (MB/s)'
    'Triad Bandwidth (NTW) (MB/s)': 'Triad Bandwidth (MB/s)'
    

spr_model_history_root_path: ../../model_history/spr
emr_model_history_root_path: ../../model_history/emr


model_config_for_workload_dict:
    LinearModel:
        SPECrate2017_int_base: "lr_spec_int.yaml"
        Memory Latency Checker latency: "lr_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "lr_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "lr_spec_fp.yaml"
        Stream: "lr_stream.yaml"
        Linpack: "lr_linpack.yaml"
        HPCG: "lr_hpcg.yaml"
    XgboostModel:
        SPECrate2017_int_base: "xgb_spec_int.yaml"
        Memory Latency Checker latency: "xgb_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "xgb_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "xgb_spec_fp.yaml"
        Stream: "xgb_stream.yaml"
        Linpack: "xgb_linpack.yaml"
        HPCG: "xgb_hpcg.yaml"
    FCN-Model:
        SPECrate2017_int_base: "fcn_spec_int.yaml"
        Memory Latency Checker latency: "fcn_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "fcn_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "fcn_spec_fp.yaml"
        Stream: "fcn_stream.yaml"
        Linpack: "fcn_linpack.yaml"
        HPCG: "fcn_hpcg.yaml"
    FCN-Vector:
        SPECrate2017_int_base: "fcn_vec_spec_int.yaml"
        Memory Latency Checker latency: "fcn_vec_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "fcn_vec_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "fcn_vec_spec_fp.yaml"
        Stream: "fcn_vec_stream.yaml"
        Linpack: "fcn_vec_linpack.yaml"
        HPCG: "fcn_vec_hpcg.yaml"
    ResNet:
        SPECrate2017_int_base: "resnet_spec_int.yaml"
        Memory Latency Checker latency: "resnet_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "resnet_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "resnet_spec_fp.yaml"
        Stream: "resnet_stream.yaml"
        Linpack: "resnet_linpack.yaml"
        HPCG: "resnet_hpcg.yaml"
    AttenResNet:
        SPECrate2017_int_base: "atten_resnet_spec_int.yaml"
        Memory Latency Checker latency: "atten_resnet_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "atten_resnet_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "atten_resnet_spec_fp.yaml"
        Stream: "atten_resnet_stream.yaml"
        Linpack: "atten_resnet_linpack.yaml"
        HPCG: "atten_resnet_hpcg.yaml"
    MultiAttenResNet:
        SPECrate2017_int_base: "multi_atten_resnet_spec_int.yaml"
        Memory Latency Checker latency: "multi_atten_resnet_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "multi_atten_resnet_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "multi_atten_resnet_spec_fp.yaml"
        Stream: "multi_atten_resnet_stream.yaml"
        Linpack: "multi_atten_resnet_linpack.yaml"
        HPCG: "multi_atten_resnet_hpcg.yaml"
    RandomForest:
        SPECrate2017_int_base: "rf_spec_int.yaml"
        Memory Latency Checker latency: "rf_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "rf_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "rf_spec_fp.yaml"
        Stream: "rf_stream.yaml"
        Linpack: "rf_linpack.yaml"
        HPCG: "rf_hpcg.yaml"
    SVMModel:
        SPECrate2017_int_base: "svm_spec_int.yaml"
        Memory Latency Checker latency: "svm_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "svm_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "svm_spec_fp.yaml"
        Stream: "svm_stream.yaml"
        Linpack: "svm_linpack.yaml"
        HPCG: "svm_hpcg.yaml"
    GroupMultiAttenResNet:
        SPECrate2017_int_base: "group_multi_atten_resnet_spec_int.yaml"
        Memory Latency Checker latency: "group_multi_atten_resnet_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "group_multi_atten_resnet_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "group_multi_atten_resnet_spec_fp.yaml"
        Stream: "group_multi_atten_resnet_stream.yaml"
        Linpack: "group_multi_atten_resnet_linpack.yaml"
        HPCG: "group_multi_atten_resnet_hpcg.yaml"
    LSTMModel:
        SPECrate2017_int_base: "lstm_spec_int.yaml"
        Memory Latency Checker latency: "lstm_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "lstm_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "lstm_spec_fp.yaml"
        Stream: "lstm_stream.yaml"
        Linpack: "lstm_linpack.yaml"
        HPCG: "lstm_hpcg.yaml"
    Lasso:
        SPECrate2017_int_base: "lasso_spec_int.yaml"
        Memory Latency Checker latency: "lasso_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "lasso_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "lasso_spec_fp.yaml"
        Stream: "lasso_stream.yaml"
        Linpack: "lasso_linpack.yaml"
        HPCG: "lasso_hpcg.yaml"
    Ridge:
        SPECrate2017_int_base: "ridge_spec_int.yaml"
        Memory Latency Checker latency: "ridge_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "ridge_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "ridge_spec_fp.yaml"
        Stream: "ridge_stream.yaml"
        Linpack: "ridge_linpack.yaml"
        HPCG: "ridge_hpcg.yaml"
    ElasticNet:
        SPECrate2017_int_base: "elastic_net_spec_int.yaml"
        Memory Latency Checker latency: "elastic_net_memory_latency.yaml"
        Memory Latency Checker Bandwidth: "elastic_net_mlc_bandwidth.yaml"
        SPECrate2017_fp_base: "elastic_net_spec_fp.yaml"
        Stream: "elastic_net_stream.yaml"
        Linpack: "elastic_net_linpack.yaml"
        HPCG: "elastic_net_hpcg.yaml"
    


label_scale:
    SPECrate2017_int_base: 1
    Memory Latency Checker Bandwidth: 5000
    Memory Latency Checker latency: 1
    SPECrate2017_fp_base: 1
    Stream: 1000
    Linpack: 10
    HPCG: 1

feature_ranking_tb:
    SPECrate2017_int_base: "feat_impor_spec_int"
    Memory Latency Checker latency: "fea_imp_mlc_latency"
    Memory Latency Checker Bandwidth: "fea_imp_mem_bd"
    SPECrate2017_fp_base: "fea_impt_spec_fp"
    Stream: "fea_imp_stream"
    Linpack: "fea_imp_linpack"
    HPCG: "fea_imp_linpack"
    
model_history_path_mapping:
    SPECrate2017_int_base: "spec_int"
    Memory Latency Checker latency: "memory_latency"
    Memory Latency Checker Bandwidth: "memory bandwidth"
    SPECrate2017_fp_base: "spec_fp"
    Stream: "stream"
    Linpack: "linpack"
    HPCG: "hpcg"
    "All Workloads": "all_workloads"
    
norm_feature_col_mapping:
    SVR.CPU.Core(s) per Socket*SVR.CPU.Base Frequency*QDF.AVX FMA Execution Unit Count: CPU_FP_operation_per_sec
    SVR.CPU.All-core Maximum Frequency: CPU_all_core_max_freq
    
report_feature_mapping:
    SVR.CPU.Core(s) per Socket*SVR.CPU.Base Frequency*QDF.AVX FMA Execution Unit Count: CPU_FP_operation_per_sec
    SVR.CPU.All-core Maximum Frequency: CPU_all_core_max_freq
    SVR.CPU.Base Frequency: CPU_base_freq
    SVR.CPU.NUMA Node(s): CPU_numa_node
    SVR.Accelerators: Accelerators
    SVR.Power.Frequency (MHz): Power_freq
    SVR.Memory.MemFree: MemFree
    META.metadata.cscope.qdf0: qdf0
    META.metadata.cscope.stepping: stepping
    Measure.DIMM.Population: DIMM_Population
    QDF.All Core Turbo Freq Rate: All_Core_Turbo_Freq
    QDF.Max Turbo Frequency Rate: Max_Turbo_Frequency
    QDF.AVX512 Execution Unit: AVX512_Execution_Unit
    QDF.AVX512 Execution Unit Count: AVX512_Execution_Unit_Count
    Measure.DIMM.Total: DIMM_Total
    Measure.DIMM.Num: DIMM_Num
    Measure.DIMM.Freq: DIMM_Freq
    Measure.DIMM.PartNo: DIMM_PartNo
    Measure.DIMM.Total--Measure.DIMM.Num: DIMM_Total--DIMM_Num
    Measure.DIMM.Total--SVR.CPU.Core(s) per Socket: DIMM_Total--CPU_core_per_socket
    DIMM.RANK: DIMM_RANK
    SVR.Memory.Buffers: Memory_Buffers
    CPU_FP_operation_per_sec: CPU_FP_operation_per_sec
    Density: Density
    Organization: Organization
    Rank: Rank
    Speed: Speed
    CL: CL
    N_SIZE: N_SIZE
    N_SIZE_RANGE: N_SIZE_RANGE
    SVR.CPU.CPU(s): CPU_s
    RESULT.WorkloadName: WorkloadName
    RESULT.WorkloadVersion: WorkloadVersion
    RESULT.WorkloadPreset: WorkloadPreset
    RESULT.TestName: TestName
    RESULT.cluster-name: cluster_name
    SVR.CPU.CPU Model: CPU_Model
    SVR.CPU.Stepping: CPU_Stepping
    SVR.CPU.Family: CPU_Family
    SVR.Memory.Automatic NUMA Balancing: Automatic_NUMA_Balancing
    SVR.System.Microcode: Microcode
    SVR.System.OS: OS
    SVR.Power.TDP: TDP
    SVR.CPU.Maximum Frequency: Maximum_Frequency
    SVR.CPU.Thread(s) per Core: Thread_per_Core
    SVR.CPU.Core(s) per Socket: Core_per_Socket
    SVR.CPU.Socket(s): Socket
    SVR.CPU.L1d Cache: L1d_Cache
    SVR.CPU.L1i Cache: L1i_Cache
    SVR.CPU.L2 Cache: L2_Cache
    SVR.CPU.L3 Cache: L3_Cache
    QDF.DDR5 FREQ: DDR5_FREQ
    QDF.MAXIMUM PEG LANE COUNT: MAXIMUM_PEG_LANE_COUNT
    QDF.AVX Deterministic P1 Freq Rte: AVX_Deterministic_P1_Freq
    QDF.AVX2 All Core Turbo Freq Rate: AVX2_All_Core_Turbo_Freq
    QDF.AVX2 Sngl Core Turbo Freq Rate: AVX2_Sngl_Core_Turbo_Freq
    QDF.AVX3 Deterministic P1 Freq Rte: AVX3_Deterministic_P1_Freq
    QDF.AVX3 All Core Turbo Freq Rate: AVX3_All_Core_Turbo_Freq
    QDF.AVX3 Sngl Core Turbo Freq Rate: AVX3_Sngl_Core_Turbo_Freq
    QDF.TMUL Deterministic P1 Freq Rte: TMUL_Deterministic_P1_Freq
    QDF.TMUL All Core Turbo Freq Rate: TMUL_All_Core_Turbo_Freq
    QDF.TMUL Sngl Core Turbo Freq Rate: TMUL_Sngl_Core_Turbo_Freq
    QDF.CLM P1 Max Freq: CLM_P1_Max_Freq
    QDF.CLM P0 Max Freq: CLM_P0_Max_Freq
    QDF.CLM Pn Max Freq: CLM_Pn_Max_Freq
    QDF.AVX FMA Execution Unit Count: AVX_FMA_EU_Count
    QDF.Max UPI Port Cnt: Max_UPI_Port_Cnt
    QDF.Functional Core: Functional_Core
    QDF.Thermal Design Power: Thermal_Design_Power
    QDF.Speed: Speed
    QDF.Cache: Cache
    QDF.No Memory Channels Supported: No_MC_Suppt
    QDF.Memory Modules/Channel Suppt: MC_Suppt
    CPU_all_core_max_freq: CPU_all_core_max_freq

